plugins {
    id 'java'
    id 'org.springframework.boot' version '3.2.2'
    id 'io.spring.dependency-management' version '1.1.4'
}

group = 'com.wondoo'
version = '0.0.1-SNAPSHOT'

java {
    sourceCompatibility = '17'
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

ext {
    set('springCloudVersion', "2023.0.0")
}

dependencies {
    /* Spring */
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    implementation 'org.springframework.boot:spring-boot-starter-security'
    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'
    /* Database */
    runtimeOnly 'com.mysql:mysql-connector-j'
    implementation 'org.springframework.boot:spring-boot-starter-data-redis'
    implementation "org.springframework.boot:spring-boot-starter-data-mongodb"
    /* QueryDSL */
    implementation 'com.querydsl:querydsl-jpa:5.0.0:jakarta'
    annotationProcessor "com.querydsl:querydsl-apt:5.0.0:jakarta"
    annotationProcessor "jakarta.annotation:jakarta.annotation-api"
    annotationProcessor "jakarta.persistence:jakarta.persistence-api"
    /* JWT */
    implementation group: 'io.jsonwebtoken', name: 'jjwt-api', version: '0.11.2'
    runtimeOnly group: 'io.jsonwebtoken', name: 'jjwt-impl', version: '0.11.2'
    runtimeOnly group: 'io.jsonwebtoken', name: 'jjwt-jackson', version: '0.11.2'
    /* Kafka */
    implementation 'org.springframework.kafka:spring-kafka'
    /* Swagger */
    implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.0.2'
    /* Github */
    implementation group: 'org.kohsuke', name: 'github-api', version: '1.318'
    /* Gson */
    implementation 'com.google.code.gson:gson:2.8.9'
    /* Spring Cloud */
    implementation 'org.springframework.cloud:spring-cloud-starter-netflix-eureka-client'
    /* Spring Cloud Config */
    implementation 'org.springframework.boot:spring-boot-starter-actuator'
    implementation 'org.springframework.cloud:spring-cloud-starter-config'
    implementation 'org.springframework.cloud:spring-cloud-starter-bootstrap'
    implementation 'org.springframework.cloud:spring-cloud-starter-bus-amqp'
    /* Logging */
    implementation 'io.micrometer:micrometer-tracing-bridge-brave'
    implementation 'io.zipkin.reporter2:zipkin-reporter-brave'
    /* Test */
    runtimeOnly 'com.h2database:h2'
    testImplementation "org.mockito:mockito-core"
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.springframework.security:spring-security-test'
    testImplementation 'org.springframework.kafka:spring-kafka-test'
    testImplementation 'de.flapdoodle.embed:de.flapdoodle.embed.mongo:4.12.2'
}

/* Spring Cloud Start */
dependencyManagement {
    imports {
        mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
    }
}
/* Spring Cloud End */




tasks.named('test') {
    useJUnitPlatform()
}

/* QueryDSL Start */
clean {
    delete file('src/main/generated')
}
/* QueryDSL End */